FORMAT: 1A
HOST: http://www.parkbase.com.br/pis/0.1/

# Parkbase-Gestão

Essa API determina as comunicações dos módulos de gestão da Parkbase Integrated Solution.
O login é feito pelo sistema nativo do Django sem necessidade de representação na API.

## Dados do Usuário Pessoa Jurídica [/enterprise]

### Visualizar Informações da Empresa [GET]

+ Request (application/json)

        {
        }

+ Response 200 (application/json)

        {
            "nome_fantasia": "Jasmin Massagens",
            "responsável": "Jasmine",
            "cnpj" : "11111111111"
            "email": "lindinha17@bol.com.br",
            "endereço": "Rua dos doces",
            "numero": "1",
            "complemento": "Ao lado do orelhão",
            "bairro": "Gardênia",
            "cep": "99999999",
            "cidade": "Carlota",
            "estado": "RS",
            "telefone": "53999998888",
        }

### Editar dados do usuário pessoa jurídica [POST]

+ Request (apllication/json)

        {
            "nome_fantasia": "Jasmin Massagens",
            "responsável": "Jasmine",
            "cnpj" : "11111111111"
            "email": "lindinha17@bol.com.br",
            "endereço": "Rua dos doces",
            "numero": "1",
            "complemento": "Ao lado do orelhão",
            "bairro": "Gardênia",
            "cep": "99999999",
            "cidade": "Carlota",
            "estado": "RS",
            "telefone": "53999998888",
        }

+ Response 200 (application/json)

        {
            "status": "1 - Sucesso!"
        }

## Dados do Usuário Pessoa Física [/user]


### Visualizar Informações do Usuário [GET]

+ Request (application/json)

        {
        }

+ Response 200 (application/json)

        {
            "nome": "Jasmin",
            "cpf" : "11111111111"
            "email": "lindinha17@bol.com.br",
            "endereço": "Rua dos doces",
            "numero": "1",
            "complemento": "Ao lado do orelhão",
            "bairro": "Gardênia",
            "cep": "99999999",
            "cidade": "Carlota",
            "estado": "RS",
            "telefone": "53999998888"
        }

### Editar Informações do Usuário [POST]

+ Request (application/json)

        {
            "nome": "Jasmin",
            "cpf": "11111111111",
            "email": "lindinha17@bol.com.br",
            "endereço": "Rua dos doces",
            "numero": "1",
            "complemento": "Ao lado do orelhão",
            "bairro": "Gardênia",
            "cep": "99999999",
            "cidade": "Carlota",
            "estado": "RS",
            "telefone": "53999998888"
        }

+ Response 200 (application/json)

        {
            "status": "1 - Sucesso!"
        }

## Estacionamentos [/estacionamentos]

### Listar Estacionamentos [GET]

+ Request (application/json)

        {
        }

+ Response 200 (application/json)

        {
            "estacionamentos": [
                {
                    "id": 12315423,
                    "nome": "Estacionamento 24h"
                }, {
                    "id": 12315424,
                    "nome": "Estacionamento 12h"
                }, {
                    "id": 12315425,
                    "nome": "Estacionamento 36h"
                }
            ]
        }

## Estacionamento [/estacionamento]

### Visualizar Informações do Estacionamento [GET]

+ Request (application/json)

        {
            "id": 12315423
        }

+ Response 200 (application/json)

        {
            "nome": "Estacionamento 24h",
            "endereço": "Rua dos doces",
            "numero": "1",
            "complemento": "Ao lado do orelhão",
            "bairro": "Gardênia",
            "cep": "99999999",
            "cidade": "Carlota",
            "estado": "RS",
            "telefone": "53999998888",
            "latitude": "34.00001",
            "longitude": "34.0001",
            "poligono" :[
                {
                    "latidude": "34.0000000",
                    "longitude": "35.000000"
                },{
                    "latidude": "34.0000000",
                    "longitude": "35.000000"
                },{
                    "latidude": "34.0000000",
                    "longitude": "35.000000"
                },{
                    "latidude": "34.0000000",
                    "longitude": "35.000000"
                }
            ]
        }


### Criar/Editar Estacionamento [POST]
Se id do estacionamento for vazio, cria um novo estacionamento

+ Request (application/json)

        {
            "id" : 222354,
            "nome": "Estacionamento 24h",
            "endereço": "Rua dos doces",
            "numero": "1",
            "complemento": "Ao lado do orelhão",
            "bairro": "Gardênia",
            "cep": "99999999",
            "cidade": "Carlota",
            "estado": "RS",
            "telefone": "53999998888",
            "latitude": "34.00001",
            "longitude": "34.0001",
            "poligono" :[
                {
                    "latidude": "34.0000000",
                    "longitude": "35.000000"
                },{
                    "latidude": "34.0000000",
                    "longitude": "35.000000"
                },{
                    "latidude": "34.0000000",
                    "longitude": "35.000000"
                },{
                    "latidude": "34.0000000",
                    "longitude": "35.000000"
                }
            ]
        }

+ Response 200 (application/json)

        {
            "status": "1 - Sucesso!"
        }

### Deleta o estacionamento [DELETE]
Marca o estacionamento como não listavel

+ Request (application/json)

        {
            "id": 12315423
        }

+ Response 200 (application/json)

        {
            "status": "1 - Sucesso?"
        }

## Reservas [/reservas]

### Lista Reservas [GET]

+ Request (application/json)

        {
            "id": 1234654
        }

+ Response 200 (application/json)

        {
            "Reservas": [
                {
                    "id": 14165431534,
                    "entrada": "1997-07-16T19:20:30+01:00",
                    "saida": "1997-07-16T19:22:30+01:00",
                    "status": "pendente",
                    "pagamento": "dinheiro"
                },{
                    "id": 14165431525,
                    "entrada": "1997-07-16T19:20:30+01:00",
                    "saida": "1997-07-16T19:22:30+01:00",
                    "status": "pendente",
                    "pagamento": "dinheiro"
                },{
                    "id": 14165431535,
                    "entrada": "1997-07-16T19:20:30+01:00",
                    "saida": "1997-07-16T19:22:30+01:00",
                    "status": "pendente",
                    "pagamento": "dinheiro"
                },{
                    "id": 14165431544,
                    "entrada": "1997-07-16T19:20:30+01:00",
                    "saida": "1997-07-16T19:22:30+01:00",
                    "status": "pendente",
                    "pagamento": "dinheiro"
                }
        }

## Reserva [/reserva]

### Informações [GET]

+ Request (application/json)

        {
            "id" = 12345678
        }

+ Response 200 (application/json)

        {
            "id": 14165431534,
            "nome": "Fulano de Tal",
            "reputacao": 4.5,
            "carro_cor": "Vermelho",
            "carro_Modelo": "vectra",
            "carro_placa": "IBF-2526",
            "entrada_estimada": "1997-07-16T19:20:30+01:00",
            "saida_estimada": "1997-07-16T19:22:30+01:00",
            "entrada": "1997-07-16T19:20:30+01:00",
            "saida": "1997-07-16T19:22:30+01:00",
            "status": "pendente",
            "mensagem": "",
            "pagamento": "dinheiro"
            "valor" : 12.22
        }

## Confirmar Reserva [/confirmar_reserva]

### Confirmar [POST]

+ Request (application/json)

        {
            "id" = 12345678
        }

+ Response 200 (application/json)

        {
        }

## Negar Reserva [/negar_reserva]

### Negar [POST]

+ Request (application/json)

        {
            "id" = 12345678,
            "mensagem" = "Estacionamento Cheio"
        }

+ Response 200 (application/json)

        {
        }

## Motorista Chegou [/chegar_reserva]

### Chegou [POST]

Caso não seja enviado o horário de entrada, o servidor tratará como se o motorista não tenha chego ainda.

+ Request (application/json)

        {
            "id" = 12345678,
            "entrada" = "1997-07-16T19:22:30+01:00"
        }

+ Response 200 (application/json)

        {
        }

## Motorista Pagou no Local [/pagar]

### Pagar [POST]

+ Request (application/json)

        {A
            "id" = 12345678,
            "valor" = 4,5,
            "saida" = "1997-07-16T19:22:30+01:00"
        }

+ Response 200 (application/json)

        {
        }
